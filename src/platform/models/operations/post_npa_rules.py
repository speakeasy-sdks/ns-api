"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import npa_policy_request as shared_npa_policy_request
from ...models.shared import npa_policy_response_item as shared_npa_policy_response_item
from enum import Enum
from typing import Optional

class QueryParamSilent(str, Enum):
    r"""flag to skip output except status code"""
    ONE = '1'
    ZERO = '0'


@dataclasses.dataclass
class PostNpaRulesRequest:
    npa_policy_request: shared_npa_policy_request.NpaPolicyRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    silent: Optional[QueryParamSilent] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'silent', 'style': 'form', 'explode': True }})
    r"""flag to skip output except status code"""
    



@dataclasses.dataclass
class PostNpaRulesResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    npa_policy_response_item: Optional[shared_npa_policy_response_item.NpaPolicyResponseItem] = dataclasses.field(default=None)
    r"""successful operation"""
    

